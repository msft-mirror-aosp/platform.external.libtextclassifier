package {
    default_applicable_licenses: [
        "external_libtextclassifier_abseil-cpp_license",
    ],
}

// Added automatically by a large-scale-change that took the approach of
// 'apply every license found to every target'. While this makes sure we respect
// every license restriction, it may not be entirely correct.
//
// e.g. GPL in an MIT project might only apply to the contrib/ directory.
//
// Please consider splitting the single license below into multiple licenses,
// taking care not to lose any license_kind information, and overriding the
// default license using the 'licenses: [...]' property on targets as needed.
//
// For unused files, consider creating a 'fileGroup' with "//visibility:private"
// to attach the license to, and including a comment whether the files may be
// used in the current project.
// See: http://go/android-license-faq
license {
    name: "external_libtextclassifier_abseil-cpp_license",
    visibility: [":__subpackages__"],
    license_kinds: [
        "SPDX-license-identifier-Apache-2.0",
        "legacy_unencumbered",
    ],
    license_text: [
        "LICENSE",
    ],
}

cc_library_static {
    name: "libtextclassifier_abseil",
    srcs: [
        "absl/**/*.cc",
    ],
    exclude_srcs: [
        "absl/**/*benchmark.cc",
        "absl/**/*benchmarks.cc",
        "absl/**/*_test.cc",
        "absl/**/*_testing.cc",
        "absl/base/spinlock_test_common.cc",
        "absl/hash/internal/print_hash_of.cc",
        "absl/log/internal/test_helpers.cc",
        "absl/log/internal/test_matchers.cc",
        "absl/log/scoped_mock_log.cc",
        "absl/random/internal/gaussian_distribution_gentables.cc",
    ],
    export_include_dirs: ["."],
    shared_libs: [
        "liblog",
    ],
    stl: "libc++",
    apex_available: [
        "//apex_available:platform",
        "com.android.extservices",
        "com.android.adservices",
    ],
    visibility: [
        "//external/libtextclassifier:__subpackages__",
        "//external/tflite-support:__subpackages__",
    ],
    sdk_version: "current",
    min_sdk_version: "30",
}
